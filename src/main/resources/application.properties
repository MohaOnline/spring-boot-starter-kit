# 完整 application.properties 参考：https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html

# 不同的环境激活不同的 profile
# 开发时通过定义 main 函数 (cn.com.tanan.boot.WebApplication) 的 JVM 参数 -Dspring.profiles.active=dev 传入
# 部署时通过环境变量传入 export spring_profiles_active=dev
# application.properties 中定义时为 spring.profiles.active = dev

# Tomcat 端口
server.port = 8088

# ################################################## logs #############################################################<
#logging.level.org.springframework = DEBUG;
# 激活 spring-boot-devtools 会变成 always
server.error.include-stacktrace = never
# ################################################## logs #############################################################>

# ################################################## actuator #########################################################<
# 允许 Spring Boot 应用通过 Rest API 关闭
# 调用方法
# $ curl -X POST localhost:8089/actuator/shutdown
# {"timestamp":1401820343710,"error":"Not Found","status":404,"message":"","path":"/actuator/shutdown"}
#management.endpoint.shutdown.enabled=true

# 应用管理服务侦听路径需要配置打开
# 调用方法
# curl localhost:8089/actuator/health
management.endpoints.web.exposure.include = info,health,metrics,loggers,beans,mappings,shutdown
management.endpoint.health.show-details = always

# 设置 actuator 侦听端口
management.server.port = 8089
management.server.address = 127.0.0.1
# #################################################### actuator #######################################################>


# #################################################### thymeleaf ######################################################<
# https://docs.spring.io/spring-boot/docs/2.4.x/reference/html/appendix-application-properties.html#spring.thymeleaf.cache
## 默认路径
#spring.thymeleaf.prefix=classpath:/templates/
## View 名自动补充的后缀
spring.thymeleaf.suffix = .html
## 模板格式
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache = false
# #################################################### thymeleaf ######################################################>


# ######################################################## JPA ########################################################<
spring.jpa.open-in-view = false

# 配置 h2 数据库
spring.h2.console.path = /ssk/h2-console
# 有时用 spring.ds.h2.url 不行
spring.h2.ds.jdbc-url = jdbc:h2:mem:ssk;DB_CLOSE_ON_EXIT=FALSE
spring.h2.ds.driverClassName = org.h2.Driver
spring.h2.ds.username = root
spring.h2.ds.password = root

spring.jpa.hibernate.ddl-auto = update
# 当仅有 h2 数据源时会执行 data-h2.sql 文件
spring.datasource.platform = h2
# Mode to apply when determining if DataSource initialization should be performed using the available DDL and DML scripts.
# spring.datasource.initialization-mode=always
# ######################################################## JPA ########################################################>


# #################################################### GraphQL ########################################################<
graphql.servlet.enabled = true
graphql.servlet.corsEnabled = true
graphql.servlet.mapping = /graphql

graphiql.endpoint = /graphql
graphiql.mapping = /ssk/graphiql-ui
# #################################################### GraphQL ########################################################>
